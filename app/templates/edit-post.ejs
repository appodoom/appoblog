<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Edit Post | Appoblog</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 2rem;
        background: #f9f9f9;
        color: #333;
      }
      .container {
        max-width: 700px;
        margin: auto;
        background: #fff;
        border-radius: 8px;
        box-shadow: 0 1px 8px rgba(0, 0, 0, 0.1);
        padding: 2rem;
      }
      h1 {
        text-align: center;
        margin-bottom: 1.5rem;
        font-size: 2rem;
        color: #007acc;
      }
      form {
        display: flex;
        flex-direction: column;
        gap: 1rem;
      }
      label {
        font-weight: bold;
        margin-bottom: 0.25rem;
      }
      input[type="text"],
      textarea {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 1rem;
        resize: vertical;
        padding-right: 0;
        font-family: inherit;
      }
      textarea {
        height: 300px;
      }
      .actions {
        display: flex;
        justify-content: flex-end;
        gap: 0.5rem;
        margin-top: 1.5rem;
      }
      .btn {
        padding: 0.75rem 1.5rem;
        font-size: 1rem;
        border: none;
        border-radius: 4px;
        cursor: pointer;
      }
      .btn-submit {
        background: #007acc;
        color: #fff;
      }
      .btn-cancel {
        background: #ccc;
        color: #333;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        justify-content: center;
      }
      .error {
        color: #c00;
        margin-bottom: 1rem;
        display: none;
      }
      input[type="file"] {
        display: none;
      }

      #upload_assets {
        display: flex;
        gap: 10px;
        flex-direction: row;
        align-items: center;
        justify-content: end;
        padding-inline: 10px;
      }

      .file-upload-btn {
        background-color: #007acc;
        color: white;
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        width: fit-content;
        border-radius: 4px;
        padding: 5px;
      }

      .file-upload-btn svg {
        fill: white;
      }

      .file-upload-btn.disabled {
        background-color: #ccc;
      }
      .file-upload-btn.disabled svg {
        fill: gray;
      }
      #upload_submit {
        background: none;
        color: #007acc;
        font-size: 1.1rem;
        border: none;
        cursor: pointer;
        text-decoration: underline;
      }

      #upload_submit:disabled {
        color: rgb(163, 163, 163);
        cursor: not-allowed;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>Edit Post</h1>
      <form id="upload_assets">
        <label for="fileUpload" class="file-upload-btn">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="24px"
            viewBox="0 -960 960 960"
            width="24px"
            fill="#e3e3e3"
          >
            <path
              d="M440-320v-326L336-542l-56-58 200-200 200 200-56 58-104-104v326h-80ZM240-160q-33 0-56.5-23.5T160-240v-120h80v120h480v-120h80v120q0 33-23.5 56.5T720-160H240Z"
            />
          </svg>
        </label>
        <input type="file" name="fileUpload" multiple id="fileUpload" />
        <button type="submit" id="upload_submit">Upload assets</button>
      </form>
      <div role="alert" class="error" id="errorMessage"></div>

      <form id="main_data">
        <input type="hidden" name="id" value="<%= post.uuid %>" />

        <div>
          <label for="title">Title</label>
          <input
            id="title"
            name="title"
            type="text"
            value="<%= post.title %>"
          />
        </div>

        <div>
          <label for="author">Author</label>
          <input
            id="author"
            name="author"
            type="text"
            value="<%= post.author %>"
          />
        </div>

        <div>
          <label for="content">Content (Markdown)</label>
          <textarea id="content" name="content"><%= post.content %></textarea>
        </div>

        <div class="actions">
          <a href="/post?id=<%= post.uuid %>" class="btn btn-cancel">Cancel</a>
          <button
            id="submit"
            type="submit"
            class="btn btn-submit"
            data-id="<%=post.uuid%>"
          >
            Save Changes
          </button>
        </div>
      </form>
    </div>
  </body>
  <script>
    const uploadForm = document.getElementById("upload_assets");
    const uploadSubmit = document.getElementById("upload_submit");
    const uploadLabel = document.querySelector(".file-upload-btn");
    uploadForm.onsubmit = async (e) => {
      e.preventDefault();
      errorMessage.style.display = "none";
      uploadLabel.classList.add("disabled");
      uploadSubmit.disabled = true;
      const payload = new FormData();
      const files = uploadForm.fileUpload.files;
      for (let i = 0; i < files.length; i++) {
        payload.append("fileUpload", files[i]);
      }
      try {
        const res = await fetch("/assets", {
          method: "POST",
          body: payload,
        });
        if (!res.ok) {
          const data = await res.json();
          throw new Error(data.error);
        }
      } catch (err) {
        errorMessage.style.display = "block";
        errorMessage.innerText = err;
      } finally {
        uploadSubmit.disabled = false;
        uploadLabel.classList.remove("disabled");
        uploadForm.reset();
      }
    };
    const form = document.getElementById("main_data");
    const submit = document.getElementById("submit");
    const errorMessage = document.getElementById("errorMessage");
    form.onsubmit = async (e) => {
      submit.disabled = true;
      e.preventDefault();
      const payload = {
        title: form.title.value,
        author: form.author.value,
        content: form.content.value,
      };
      const id = submit.dataset.id;
      try {
        const res = await fetch(`/edit-post?id=${id}`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(payload),
        });
        if (res.redirected) {
          window.location.href = res.url;
          return;
        }
        const data = await res.json();
        if (!res.ok) throw new Error(data.error);
      } catch (err) {
        errorMessage.textContent = err.message;
        errorMessage.style.display = "block";
      } finally {
        submit.disabled = false;
      }
    };
  </script>
</html>
